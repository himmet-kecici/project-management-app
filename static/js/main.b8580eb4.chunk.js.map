{"version":3,"sources":["redux/types.js","components/Mission.jsx","redux/actions.js","components/MissionsList.jsx","components/MissionsPage.jsx","App.js","redux/utils.js","redux/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["Types","EDIT_MISSION","CREATE_MISSION","REMOVE_MISSION","MISSIONS_STATUSES","connect","props","onRemoveMissions","id","dispatch","type","removeMission","onClick","mission","className","style","color","fontSize","cursor","onChange","e","status","target","value","payload","params","editMission","defaultValue","map","title","description","MissionList","missions","onStatusChange","state","useState","missionForm","showMissionForm","setTitle","setDescription","onSubmit","preventDefault","uuidv4","createMission","placeholder","background","statusMissions","filter","renderMissionsLists","App","Object","assign","initialState","action","concat","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8580eb4.chunk.js","sourcesContent":["const Types = {\n    EDIT_MISSION: 'EDIT_MISSION',\n    CREATE_MISSION: \"CREATE_MISSION\",\n    REMOVE_MISSION: \"REMOVE_MISSION\"\n}\n\nexport default Types;","import React from 'react'\nimport { removeMission, editMission } from '../redux/actions';\nimport { connect } from 'react-redux'\n\n\n\nconst MISSIONS_STATUSES = ['Unstarted', 'In Progress', 'Completed']\n\n\nconst Mission = (props) => {\n\n\n\n    function onStatusChange(e) {\n        const id = props.mission.id\n        const status = e.target.value\n        props.dispatch(editMission(id, { status }))\n    }\n\n    const onRemoveMissions = (id) => {\n        props.dispatch(removeMission(id))\n    }\n\n\n    return (\n        <div>\n            <div onClick={() => onRemoveMissions(props.mission.id)} className='float-right m-1' style={{ color: 'tomato', fontSize: '30px', cursor: 'pointer' }}>&#x2717;</div>\n            <form onChange={onStatusChange}>\n                <select defaultValue={props.mission.status}>\n                    {MISSIONS_STATUSES.map(status => (\n                        <option value={status} key={status}>{status}</option>\n                    ))}\n                </select>\n            </form >\n\n\n            <h2 className=\"cart-title mt-3 text-uppercase px-2\" style={{ color: '#3a4' }}>{props.mission.title}</h2>\n            <p className=\"card-text mb-3 text-muted font-weight-bold px-2\">{props.mission.description}</p>\n\n\n        </div>\n    )\n}\n\nexport default connect()(Mission);","import Types from './types'\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const editMission = (id, params = {}) => ({\n    type: Types.EDIT_MISSION,\n    payload: {\n        id,\n        params\n    }\n})\n\nexport const createMission = ({ title, description }) => ({\n    type: Types.CREATE_MISSION,\n    payload: {\n        id: uuidv4(),\n        title,\n        description,\n        status: 'Unstarted'\n\n    }\n})\n\nexport const removeMission = (id) => ({\n    type: Types.REMOVE_MISSION,\n    id\n})","import React from 'react'\nimport Mission from './Mission'\n\nconst MissionList = (props) => {\n    return (\n        <div>\n            <div className='card-header text-uppercase text-center font-weight-bold '>\n                {props.status}\n            </div>\n            <div>\n                {props.missions.map(mission => (\n                    <Mission key={mission.id} mission={mission} onStatusChange={props.onStatusChange} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default MissionList","import React, { useState } from 'react'\nimport MissionList from './MissionsList'\nimport { connect } from 'react-redux'\nimport { createMission } from '../redux/actions';\n\n\n\n\nconst MISSIONS_STATUSES = ['Unstarted', 'In Progress', 'Completed']\n\nconst MissionsPage = (props) => {\n\n    const [missionForm, showMissionForm] = useState(false)\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n\n    const onChangeTitle = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const onDescriptionChange = (e) => {\n        setDescription(e.target.value)\n    }\n\n    const formToggler = () => {\n        showMissionForm(!missionForm)\n    }\n\n    const resetForm = () => {\n        setTitle('')\n        setDescription('')\n        showMissionForm(false)\n    }\n\n\n    const onCreateMissions = (e) => {\n        e.preventDefault()\n        props.dispatch(createMission({\n            title, description\n        }))\n        resetForm()\n    }\n    const renderMissionsLists = () => {\n        const { missions } = props;\n        return MISSIONS_STATUSES.map((status, id) => {\n            const statusMissions = missions.filter(mission => mission.status === status)\n            return (\n                <div className=\"col-md-3 card m-2 p-0\" key={id}>\n                    <MissionList key={status} status={status} missions={statusMissions} />\n                </div>\n            )\n        })\n    }\n    return (\n        <div className=\"container  my-5\">\n            <div className='jumbotron py-3'>\n                <div className='row'>\n                    <div className='col-md-2'>\n                        <button onClick={formToggler} className='btn btn-success m-3'>\n                            Add\n                        </button>\n                    </div>\n                    <div className='col-md-10'>\n                        <h2 className='display-4 text-center '>Project Management App</h2>\n                    </div>\n                </div>\n                {missionForm && (\n                    < form onSubmit={onCreateMissions}>\n                        <div className='form-group'>\n                            <input type='text' className='form-control' placeholder='Mission Title' onChange={onChangeTitle} />\n                        </div>\n                        <div className='form-group'>\n                            <textarea type='text' className='form-control' placeholder='Mission Description' onChange={onDescriptionChange}>\n                            </textarea>\n                        </div>\n                        <button type='submit' className='btn btn-primary'>&#10003;</button>\n                    </form>)}\n            </div>\n            <div className='row d-flex justify-content-center position-relative' style={{ background: '#e9ecef' }}>{renderMissionsLists()}</div>\n        </div >\n    )\n}\n\nconst mapStateToProps = state => ({\n    missions: state.missions\n})\n\nexport default connect(mapStateToProps)(MissionsPage)","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MissionsPage from './components/MissionsPage';\n\n\nfunction App() {\n  return (\n    <div>\n      <MissionsPage />\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const editMission = (state, payload) => (\n    state.missions.map((mission) => {\n        if (mission.id === payload.id) {\n            return Object.assign({}, mission, payload.params)\n        }\n        return mission;\n    })\n\n)\n\nexport default editMission;","import editMission from './utils'\nimport Types from './types'\n\nconst initialState = [\n\n]\n\nconst missions = (state = { missions: initialState }, action) => {\n    const { payload } = action;\n    switch (action.type) {\n        case Types.EDIT_MISSION: {\n            return {\n                missions: editMission(state, payload)\n            }\n        }\n        case Types.CREATE_MISSION: {\n            return {\n\n                missions: state.missions.concat(payload)\n            }\n        }\n        case Types.REMOVE_MISSION: {\n            return {\n                missions: state.missions.filter(mission => mission.id !== action.id)\n            }\n        }\n        default: return state\n    }\n}\n\n\nexport default missions;\n","import { createStore } from 'redux'\nimport missions from './reducer'\n\n\nconst store = createStore(missions)\n\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}